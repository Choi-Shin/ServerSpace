1)
MVC 모델 관점
-Java:
(Model) 
빈 객체, DAO, Service 등
비즈니스 영역의 로직을 처리한다.

-JavaScript:
(View) 
사용자가 보게 될 결과 화면을 담당한다.
이벤트에 따른 화면 출력이 가능하다.

-JSP:
(View) 
사용자에게 최종적으로 보여지는 결과물을 작성한다. 
완벽하게 처리가 완료된 결과물을 서블릿으로부터
포워딩하여 결과물을 생성한다.

-Servlet:
(Controller)
비즈니스 로직에 알맞는 모델을 선택하여 
로직 클래스를 통해 요청을 처리하도록 흐름제어를 한다.

2)
2-1) a 태그 ::
<a href="파일명?파라미터이름=파라미터값"/>
 형식으로 기입하며 괄호 안에 적힌 페이지로 이동할 때
 파일명만 적는 기본형으로는 데이터를 가져가지 않지만
 위의 방식으로 사용하는 것이 가능하다.

2-2) sendRedirect ::
 <% 
 response.sendRedirect("파일명?파라미터이름=파라미터값"); 
 %>
 형식으로 기입하며 괄호 안에 적힌 페이지로 이동할 때
 파일명만 적는 기본형으로는 데이터를 가져가지 않지만
 위의 방식으로 사용하는 것이 가능하다.

2-3) 액션태그 forward :: 
<jsp:orward page="파일명"/> 형식으로 기입하며
다른 페이지로의 이동과 같은 페이지 흐름을 제어한다.
request, response 객체도 함께 가져가기 때문에
데이터 유지가 된다.

2-4) 디랙티브 include ::
<%@ include file="포함할 파일" %>
include 디렉티브는 다른 파일의 내용을 현재 위치에 
포함 시킨 후에 jsp파일을 자바 파일로 변환하고 
컴파일하는 방식이다.
include하는 파일과 include되는 파일은 
하나의 파일로 인식되며, 
사용하고자 하는 변수 또한 공유하게 된다.

2-6) 액션태그 usebean ::
<jsp:useBean id="bean이름"
             scope="사용반경"
             class="클래스파일이름(위치포함)">
<jsp:setProperty name="bean이름" 
                 property="변수명" 
                 value="값" />
</jsp:useBean>
형식으로 기입하며 <jsp:getProperty> 태그로
객체의 값을 가져올 수 있다.
 